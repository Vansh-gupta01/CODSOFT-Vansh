#include <iostream>
#include <vector>
#include <string>

using namespace std;

class Task {
public:
    string description;
    bool isCompleted;

    Task(string description) {
        this->description = description;
        this->isCompleted = false;
    }
};

class ToDoList {
public:
    vector<Task> tasks;

    void addTask(const string &description) {
    Task newTask(description);
    tasks.push_back(newTask);
   }
  

    void viewTasks() {
        cout << "Your To-Do List:"<<endl;
        for (int i = 0; i < tasks.size(); i++) {
            cout << i + 1 << ". " << tasks[i].description;
            if (tasks[i].isCompleted) {
                cout << " (Completed)";
            }
            cout << endl;
        }
    }

    void markTaskCompleted(int index) {
        if (index >= 0 && index < tasks.size()) {
            tasks[index].isCompleted = true;
        } else {
            cout << "Invalid index."<<endl;
        }
    }

    void removeTask(int index) {
        if (index >= 0 && index < tasks.size()) {
            tasks.erase(tasks.begin() + index);
        } else {
            cout << "Invalid index."<<endl;
        }
    }
};

int main() {
    ToDoList todoList;
    int choice;

    do {
        cout << "To-Do List Manager"<<endl;
        cout << "1. Add your Task"<<endl;
        cout << "2. View your Tasks"<<endl;
        cout << "3. Mark your Task as Completed"<<endl;
        cout << "4. Remove your Task"<<endl;
        cout << "5. Exit"<<endl;
        cout << "Please select your choice: ";
        cin >> choice;

        switch (choice) {
            case 1: {
                string task;
                cout << "Enter your task: ";
                cin.ignore();
                getline(cin, task);
                todoList.addTask(task);
                break;
            }
            case 2:
                todoList.viewTasks();
                break;
            case 3: {
                int index;
                cout << "Select the task index to mark as completed: ";
                cin >> index;
                todoList.markTaskCompleted(index - 1);
                break;
            }
            case 4: {
                int index;
                cout << "Select the task index to remove: ";
                cin >> index;
                todoList.removeTask(index - 1);
                break;
            }
            case 5:
                cout << "Exiting...\n";
                break;
            default:
                cout << "Invalid choice. Please try again.\n";
        }
    } while (choice != 5);

    return 0;
}